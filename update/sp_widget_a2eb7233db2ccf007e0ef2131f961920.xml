<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($location,$scope,$rootScope,$timeout,$window) {
	var c = this;

    $timeout(function(){
			var pickingOwner = {
				"id": c.data.draftingOwnerId,
				"pick": c.data.current_pick,
				"round": c.data.round
			};
$rootScope.$broadcast('draftingOwner', pickingOwner);
		}, 1000);
	
	if (c.data.round < 8){
	 c.data.timer = 60;
	} else {
	 c.data.timer = 120;

	}
	
	$scope.activeTimer = true;
	$scope.remaining = c.data.timer;

	$scope.startTimer = function(){
		$scope.timeout = $timeout(function() {
			$scope.remaining--;
			$scope.startTimer();
		}, 1000);
	};

	$scope.stopTimer = function(){
		$scope.activeTimer = false;
		$timeout.cancel($scope.timeout);
	};

	$scope.restatTimeout = function() {
		$scope.activeTimer = true;
		$scope.timeout = $timeout($scope.startTimer, 1000);
	}

	$scope.startTimer();

$scope.editDraft = function(){
				$window.location = '?id=edit_draft&number='+c.data.draft_number;
}


	$scope.getColor = function(time){
		if (time >= 10){
			return "btn-success"
		}
		if (time < 10 && time >0){
			return "btn-warning"
		}
		if (time <= 0){
			return "btn-danger"
		}
	};

	$scope.showTeam = function(){
		if(c.data.showTeam){
			c.data.showTeam = '';
		} else
			c.data.showTeam = true
			c.server.update();
	}

		$scope.positionClass = function(position){
		if(position == 'WR'){
			return 'bg-wr text-black'
		}
		if(position == 'RB'){
			return 'bg-rb text-white'
		}
		if(position == 'QB'){
			return 'bg-qb text-black'
		}
		if(position == 'TE'){
			return 'bg-te text-white'
		}
		if(position == 'DST'){
			return 'bg-dst text-white'
		}
		if(position == 'K'){
			return 'bg-k text-white'
		}
	}
		
		$scope.getOwnerColor = function (owner){
			if (c.data.draftingOwner == owner){
				return 'label-warning'
			} else {
				return 'label-info'
			}
		}
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn-circle {
  width: 45px;
  height: 45px;
  text-align: center;
  padding: 6px 0;
  font-size: 16px;
  line-height: 200%;
  border-radius: 22.5px;
}

.dst {
      background-color: #a0caf0 !important;
}
.k {
      background-color: #ff0080 !important;
}
.qb {
      background-color: #7efecf !important;
  color:#000;
}
.wr {
      background-color: #dcd7ee !important;
    color:#000;
}
.rb {
      background-color: #39ff14 !important;
    color:#000;
}
.te {
      background-color: #f65c26 !important;
}

.row:before,
.row:after {
  display: block;
}

.whole-div {
  margin-bottom: 10px;
}

.green-text {
  color: #2abd68 !important;
}

.red-text {
  color: #ff3d00 !important;
}

.approve-reject {
  background: #f9f9f9;
  clear: both;
  .bg-light {
    background: #f9f9f9;
  }
  .bg-white {
    background: #fff;
  }
  .header {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 13px;
    background: #fff;
    border-top: 1px solid #e9e9e9;
    color: #485562;
    .expand-icon {
      .fa {
        transition: transform .5s;
        color: #199cdb;
        margin-left: 10px;
        font-size: 20px;
      }
      .fa-plus-rotate {
        transform: rotate(135deg);
      }
    }
    p {
      margin-bottom: 0px;
    }
    .title {
      display: flex;
      .text {
        padding-top: 2px;
      }
      .card-header {
        text-transform: uppercase;
      }
      .badge {
        margin-left: 5px;
        color: #fff;
        background: #ee525e;
      }
    }
  }
  .panel-default {
    border: 0px;
    .panel-heading {
      padding: 0px;
      // color: #000;
      background: #fff;
      border: 0px;
    }
  }
  .panel {
    border-radius: 0px !important;
    margin-bottom: 0px;
    background: #fff;
    border: 0px;
    border-radius: 0px;
    box-shadow: none;
  }
  .panel-body {
    padding: 0px;
    border: 0px;
    border-top: 0px !important;
  }
  .panel-group {
    margin-bottom: 10px;
  }
  .body-wrapper {
    background: #fff;
  }
  .body {
    background: #D7D7D7;
    // margin-bottom: 10px;
    border: 1px solid #e6e6e6;
    p {
      margin-bottom: 0px;
    }
    .card {
      padding: 10px;
      .first-line {
        display: flex;
        align-items: center;
        justify-content: space-between;
        .title {
          font-size: 24px;
          font-weight: 500;
          color: #000;
        }
        .attn-text {
          font-size: 16px;
          display: flex;
          align-items: center;
          p {
            padding-right: 5px;
            padding-left: 5px;
            //color: #ed5460;
          }
          .attn-icon {
            color: #ed5460;
          }
        }
      }
      .second-line {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        .sub-title {
          p {
            color: #e6e6e6;
          }
        }
        .right-side {
          display: flex;
          align-items: center;
          p {
            font-size: 36px;
            padding-left: 5px;
            color: #000;
          }
          .icon {
            color: #000;
          }
        }
      }
    }
    .buttons {
      border-top: 1px solid #ddd;
      button {
        width: 100%;
        text-align: center;
        text-transform: uppercase;
        background: inherit;
        border-radius: 0px;
        .fa {
          margin-right: 2px;
        }
      }
      .approve-btn {
        &amp;:active {
          color: #2abd68;
        }
      }
      .view-btn {
        color: #199cdb;
        &amp;:active {
          color: #199cdb;
        }
      }
      .middle-btn {
        &amp;:active {
          color: #ed5460;
        }
        border-left: 1px solid #ddd;
        border-right: 1px solid #ddd;
      }
    }
    .automatic-approval {
      display: flex;
      .criteria-met {
        color: #2abd68;
        font-size: 12px;
        .fa {
          margin-left: 5px;
        }
      }
      button {
        text-align: center;
        text-transform: uppercase;
        background: inherit;
        border-radius: 0px;
        .fa {
          margin-right: 2px;
        }
      }
      .approve-btn {
        width: 60%;
        border-top: 1px solid #ddd;
        border-right: 1px solid #ddd;
        &amp;:active {
          color: #2abd68;
        }
      }
      .view-btn {
        width: 40%;
        color: #199cdb;
        border-top: 1px solid #ddd;
        &amp;:active {
          color: #199cdb;
        }
      }
    }
    .criteria-details {
      padding: 10px;
      p {
        margin-bottom: 0px;
      }
      .header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        color: #9f9f9f;
        padding: 0px;
        border-top: 0px;
        .heading {
          font-size: 20px;
        }
      }
      .sub_title {
        font-size: 14px;
        color: #9f9f9f;
      }
      .all-criterias {
        padding-top: 10px;
        .title {
          text-transform: uppercase;
          font-size: 14px;
          color: #000;
        }
        .each-criteria {
          font-size: 18px;
          color: #000;
          .fa {
            font-size: 20px;
            margin-right: 10px;
            color: #2abd68;
          }
        }
      }
    }
  }
}
.bg-wr{
background:#dcd7ee;
}
.bg-rb{
background:#39ff14;
}
.bg-qb{
background:#7efecf;
}
.bg-te{
background:#f65c26;
}
.bg-dst{
background:#a0caf0;
}
.bg-k{
background:#ff0080;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>draft_header</id>
        <internal>false</internal>
        <link/>
        <name>Draft Header</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[data.draft_number = $sp.getParameter("number");
if (!input && !data.isLoaded){
	loadDraft();
	translateRound(data.current_pick);
	loadOwners();
}
if (typeof input != "undefined" && input.showTeam) {
	loadTeam();
}
function loadDraft() {
	data.round = 1;
	var dr = new GlideRecord('x_snc_fantasydraft_drafts');
	dr.get('number', $sp.getParameter("number"));
	data.current_pick = parseInt(dr.pick_number.getDisplayValue());

	var co = new GlideRecord('x_snc_fantasydraft_owner_order')
	co.addQuery('draft',dr.sys_id);
	co.addQuery('order',translatePick(data.current_pick))
	co.query();
	while (co.next()){
		data.draftingOwner=co.owner.abbr.getDisplayValue();
		data.draftingOwnerId=co.owner.sys_id.getDisplayValue();
	}
	data.positionQBCount = getPositionCount(dr.sys_id,co.owner,'QB');
	data.positionRBCount = getPositionCount(dr.sys_id,co.owner,'RB');
	data.positionWRCount = getPositionCount(dr.sys_id,co.owner,'WR');
	data.positionTECount = getPositionCount(dr.sys_id,co.owner,'TE');
	data.positionDSTCount = getPositionCount(dr.sys_id,co.owner,'DST');
	data.positionKCount = getPositionCount(dr.sys_id,co.owner,'K');
}

function translatePick(number) {
	if (number <= 12) {
		return number;
	}
	if (number <=24) {
		return 25 - number;
	} else {
		return translatePick(number-24)
	}
}

function translateRound(number) {

	if (number <= 12) {
		return parseInt(data.round);
	} else {
		number = number - 12;
		data.round++;
		translateRound(number);
	}
}

function getPositionCount(draft,owner,position){
	var pc = new GlideRecord('x_snc_fantasydraft_draft_picks');
	pc.addQuery('draft', draft);
	pc.addQuery('owner',owner);
	pc.addQuery('player.position','IN',position)
	pc.query();
	return pc.getRowCount();
}

function loadTeam(){
	data.players = [];
	var pl = new GlideRecord('x_snc_fantasydraft_draft_picks');
	pl.addQuery('draft.number',$sp.getParameter("number"));
	pl.addQuery('owner', input.draftingOwnerId);
	pl.orderBy('player.adp');
	pl.query();
	while (pl.next()){
		var player = {
			"name": pl.player.getDisplayValue(),
			"position": pl.player.position.getDisplayValue(),
			"logo": pl.player.team.logo.getDisplayValue(),
			"sys_id": pl.sys_id.getDisplayValue(),
			"bye":pl.player.team.bye_week.getDisplayValue(),
			"pick_number":pl.pick_number.getDisplayValue()
		};
		player.pick_number = parseInt(player.pick_number)
		data.players.push(player);
	}
}

function loadOwners(){
	var lo = new GlideRecord('x_snc_fantasydraft_owner_order');
	lo.addQuery('draft.number',$sp.getParameter("number"));
	lo.query();
	data.ownerArray=[];
	data.error = "loop";
	while (lo.next()){
		data.error = "in loop"+lo.owner.abbr.getDisplayValue();
		var ownerObj = {
			"abbr": lo.owner.abbr.getDisplayValue(),
			"order": lo.order.getDisplayValue()
		}
		ownerObj.order=parseInt(ownerObj.order);
		data.ownerArray.push(ownerObj);
		data.error = "end";
	}
}
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-08-20 04:03:28</sys_created_on>
        <sys_id>a2eb7233db2ccf007e0ef2131f961920</sys_id>
        <sys_mod_count>211</sys_mod_count>
        <sys_name>Draft Header</sys_name>
        <sys_package display_value="Live Fantasy Draft" source="x_snc_fantasydraft">0509ba21dbe80b007e0ef2131f9619b6</sys_package>
        <sys_policy/>
        <sys_scope display_value="Live Fantasy Draft">0509ba21dbe80b007e0ef2131f9619b6</sys_scope>
        <sys_update_name>sp_widget_a2eb7233db2ccf007e0ef2131f961920</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-27 16:49:38</sys_updated_on>
        <template><![CDATA[<!--<div class="row-fluid">
  <span class="label span1" ng-repeat="owner in c.data.ownerArray|orderBy:'order'" ng-class="getOwnerColor(owner.abbr)">{{owner.abbr}}</span>
</div>
-->
<div ng-show="activeTimer" class="col-xs-1 btn btn-circle text-white" ng-class="getColor(remaining)" ng-click="stopTimer()">
  {{remaining}}
</div>
<div ng-hide="activeTimer" class="col-xs-1 btn btn-circle text-white" ng-class="getColor(remaining)" ng-click="restatTimeout()">
  {{remaining}}
</div>
<div class="col-xs-10 text-center" ng-click="showTeam()">
  <button class="btn btn-info btn-lg btn-block" disabled>
    {{c.data.draftingOwner}}: P{{c.data.current_pick}} in R#{{c.data.round}}
  </button>
</div>
<div class="col-xs-12" >
  <div class="row">
    <div class="col-xs-2"><span class="label qb">QB {{c.data.positionQBCount}}/1</span></div>
    <div class="col-xs-2"><span class="label wr">WR {{c.data.positionWRCount}}/2</span></div>
    <div class="col-xs-2"><span class="label rb">RB {{c.data.positionRBCount}}/2</span></div>
    <div class="col-xs-2"><span class="label te">TE {{c.data.positionTECount}}/1</span></div>
    <div class="col-xs-2"><span class="label dst">DST {{c.data.positionDSTCount}}/1</span></div>
    <div class="col-xs-2"><span class="label k">K {{c.data.positionKCount}}/1</span></div>
  </div>
</div>
<div ng-show="c.data.showTeam">
  <div class="approve-reject" ng-if="data.players.length > 0" ng-repeat="player in data.players|orderBy:'pick_number'">
    <div class="body">
      <div class="body-wrapper">
        <div class="card bg-info">
          <div class="first-line">
            <p class="title">#{{player.pick_number}} {{player.name}}</p>
            <div class="attn-text rounded" ng-class="positionClass(player.position)">
              <p class="text-twelve text-upper ">{{player.position}}</p>
            </div>
            <div class="right-side">
              <img class="" ng-src="{{player.logo}}" height="36px"/>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
